import { createAuth, type Env } from "./auth"

/**
 * Auto-seed Development User
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á development user ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠ server ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô development mode
 * 
 * @param env - Cloudflare Worker environment bindings
 */
export async function seedDevUser(env: Env): Promise<void> {
  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô development environment ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (env.NODE_ENV !== "development") {
    console.log("‚è≠Ô∏è  Skipping dev user seed (not in development mode)")
    return
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ dev user credentials ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (!env.DEV_USER_EMAIL || !env.DEV_USER_PASSWORD) {
    console.warn("‚ö†Ô∏è  DEV_USER_EMAIL ‡πÅ‡∏•‡∏∞ DEV_USER_PASSWORD ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô environment variables")
    return
  }

  try {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ user ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const existingUser = await env.DB.prepare(
      "SELECT id FROM user WHERE email = ?"
    )
      .bind(env.DEV_USER_EMAIL)
      .first()

    if (existingUser) {
      console.log(`‚úÖ Dev user already exists: ${env.DEV_USER_EMAIL}`)
      return
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Better Auth instance
    const auth = createAuth(env)

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á dev user ‡∏ú‡πà‡∏≤‡∏ô Better Auth API
    // Better Auth ‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ password hashing ‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏á
    const timestamp = Date.now()
    const userId = crypto.randomUUID()

    // ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å Better Auth ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ Request object ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö signUp
    // ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á user ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ó‡∏ô
    // ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ Better Auth ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ password hashing

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á mock request ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Better Auth
    const mockRequest = new Request(`${env.BASE_URL}/api/auth/sign-up/email`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        email: env.DEV_USER_EMAIL,
        password: env.DEV_USER_PASSWORD,
        name: env.DEV_USER_NAME || "Dev User",
      }),
    })

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Better Auth sign-up endpoint
    const response = await auth.handler(mockRequest)
    
    if (response.ok) {
      console.log(`\nüéâ Dev user created successfully!`)
      console.log(`üìß Email: ${env.DEV_USER_EMAIL}`)
      console.log(`üîë Password: ${env.DEV_USER_PASSWORD}`)
      console.log(`üë§ Name: ${env.DEV_USER_NAME || "Dev User"}\n`)
    } else {
      const errorText = await response.text()
      console.error(`‚ùå Failed to create dev user: ${errorText}`)
    }

  } catch (error) {
    // ‡∏ñ‡πâ‡∏≤ user ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏î error ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏´‡πâ skip
    if (error instanceof Error) {
      if (error.message.includes("UNIQUE constraint failed")) {
        console.log(`‚úÖ Dev user already exists: ${env.DEV_USER_EMAIL}`)
      } else {
        console.error("‚ùå Error seeding dev user:", error.message)
      }
    }
  }
}

/**
 * ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• development credentials
 * 
 * @param env - Cloudflare Worker environment bindings
 */
export function logDevCredentials(env: Env): void {
  if (env.NODE_ENV === "development" && env.DEV_USER_EMAIL) {
    console.log("\n" + "=".repeat(60))
    console.log("üîß DEVELOPMENT MODE")
    console.log("=".repeat(60))
    console.log(`üìß Dev Email: ${env.DEV_USER_EMAIL}`)
    console.log(`üîë Dev Password: ${env.DEV_USER_PASSWORD}`)
    console.log(`üë§ Dev Name: ${env.DEV_USER_NAME || "Dev User"}`)
    console.log(`üåê Frontend URL: ${env.FRONTEND_URL}`)
    console.log(`üîó API URL: ${env.BASE_URL}`)
    console.log("=".repeat(60) + "\n")
  }
}

